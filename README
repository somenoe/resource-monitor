# System Resource Monitor CLI

## 🌐 Overview

A powerful Python CLI tool to monitor and log system resources in real-time.

## ✨ Features

- 📊 Monitor system resources:
  - CPU usage percentage
  - Memory metrics (total, available, used, percentage)
  - Network I/O (bytes sent/received)
  - GPU metrics:
    - Name and load
    - Memory usage and utilization
    - Temperature
- 🕒 Configurable monitoring interval
- ⏱️ Optional duration-based monitoring
- 💾 CSV data export with timestamps
- 📈 Real-time console output with formatted display

## 🚀 Installation

1. Clone the repository:

    ```bash
    git clone https://github.com/somenoe/resource-monitor.git
    cd resource-monitor
    ```

2. Install required dependencies:

    ```bash
    pip install -r requirements.txt
    ```

## 💻 Usage Examples

### Basic Monitoring

```bash
python main.py
```

- Monitors system resources
- Prints data to console
- Updates every 1 second

### Advanced Monitoring Options

1. Custom Interval (5-second snapshots):

    ```bash
    python main.py -i 5
    ```

2. Limited Duration (10 minutes):

    ```bash
    python main.py -d 600
    ```

3. Save to CSV File:

    ```bash
    python main.py -o system_resources.csv
    ```

4. Comprehensive Example:

    ```bash
    python main.py -i 5 -d 600 -o resources_log.csv
    ```

## 🔧 Command-line Arguments

| Argument         | Description                     | Default                                  | Example         |
|------------------|---------------------------------|------------------------------------------|-----------------|
| `-i, --interval` | Seconds between snapshots       | 1                                        | `-i 5`          |
| `-d, --duration` | Total monitoring time (seconds) | None (continuous)                        | `-d 600`        |
| `-o, --output`   | Output file path                | ./data/resource-monitor-[TIMESTAMP].csv  | `-o system.csv` |

## 📋 Output Data

The monitor collects the following metrics:

### System Metrics

- Timestamp (ISO format)
- CPU usage percentage
- Memory metrics:
  - Total memory
  - Available memory
  - Used memory
  - Usage percentage
- Network I/O:
  - Bytes sent
  - Bytes received

### GPU Metrics

- GPU name
- Load percentage
- Memory statistics:
  - Total memory (MB)
  - Used memory (MB)
  - Free memory (MB)
  - Memory utilization percentage
- Temperature (°C)
